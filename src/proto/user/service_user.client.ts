// @generated by protobuf-ts 2.9.6
// @generated from protobuf file "user/service_user.proto" (package "pb", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./service_user";
import type { RefreshTokenResponse } from "./rpc_refresh_token";
import type { RefreshTokenRequest } from "./rpc_refresh_token";
import type { LoginUserResponse } from "./rpc_login_user";
import type { LoginUserRequest } from "./rpc_login_user";
import type { UpdateUserResponse } from "./rpc_update_user";
import type { UpdateUserRequest } from "./rpc_update_user";
import type { GetUserResponse } from "./rpc_get_user";
import type { GetUserRequest } from "./rpc_get_user";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateUserResponse } from "./rpc_create_user";
import type { CreateUserRequest } from "./rpc_create_user";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service pb.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: CreateUser(pb.CreateUserRequest) returns (pb.CreateUserResponse);
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse>;
    /**
     * @generated from protobuf rpc: GetUser(pb.GetUserRequest) returns (pb.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse>;
    /**
     * @generated from protobuf rpc: UpdateUser(pb.UpdateUserRequest) returns (pb.UpdateUserResponse);
     */
    updateUser(input: UpdateUserRequest, options?: RpcOptions): UnaryCall<UpdateUserRequest, UpdateUserResponse>;
    /**
     * @generated from protobuf rpc: LoginUser(pb.LoginUserRequest) returns (pb.LoginUserResponse);
     */
    loginUser(input: LoginUserRequest, options?: RpcOptions): UnaryCall<LoginUserRequest, LoginUserResponse>;
    /**
     * @generated from protobuf rpc: RefreshToken(pb.RefreshTokenRequest) returns (pb.RefreshTokenResponse);
     */
    refreshToken(input: RefreshTokenRequest, options?: RpcOptions): UnaryCall<RefreshTokenRequest, RefreshTokenResponse>;
}
/**
 * @generated from protobuf service pb.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateUser(pb.CreateUserRequest) returns (pb.CreateUserResponse);
     */
    createUser(input: CreateUserRequest, options?: RpcOptions): UnaryCall<CreateUserRequest, CreateUserResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateUserRequest, CreateUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUser(pb.GetUserRequest) returns (pb.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, GetUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateUser(pb.UpdateUserRequest) returns (pb.UpdateUserResponse);
     */
    updateUser(input: UpdateUserRequest, options?: RpcOptions): UnaryCall<UpdateUserRequest, UpdateUserResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateUserRequest, UpdateUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LoginUser(pb.LoginUserRequest) returns (pb.LoginUserResponse);
     */
    loginUser(input: LoginUserRequest, options?: RpcOptions): UnaryCall<LoginUserRequest, LoginUserResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<LoginUserRequest, LoginUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RefreshToken(pb.RefreshTokenRequest) returns (pb.RefreshTokenResponse);
     */
    refreshToken(input: RefreshTokenRequest, options?: RpcOptions): UnaryCall<RefreshTokenRequest, RefreshTokenResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<RefreshTokenRequest, RefreshTokenResponse>("unary", this._transport, method, opt, input);
    }
}
