// @generated by protobuf-ts 2.9.6
// @generated from protobuf file "post/rpc_get_posts_listing.proto" (package "pb", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PostWithUsername } from "./post";
/**
 * @generated from protobuf message pb.GetPostsListingRequest
 */
export interface GetPostsListingRequest {
    /**
     * @generated from protobuf field: int32 per_page = 1;
     */
    perPage: number;
    /**
     * @generated from protobuf field: int32 page = 2;
     */
    page: number;
}
/**
 * @generated from protobuf message pb.GetPostsListingResponse
 */
export interface GetPostsListingResponse {
    /**
     * @generated from protobuf field: repeated pb.PostWithUsername posts = 1;
     */
    posts: PostWithUsername[];
    /**
     * @generated from protobuf field: bool next_page_exists = 2;
     */
    nextPageExists: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class GetPostsListingRequest$Type extends MessageType<GetPostsListingRequest> {
    constructor() {
        super("pb.GetPostsListingRequest", [
            { no: 1, name: "per_page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetPostsListingRequest>): GetPostsListingRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.perPage = 0;
        message.page = 0;
        if (value !== undefined)
            reflectionMergePartial<GetPostsListingRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPostsListingRequest): GetPostsListingRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 per_page */ 1:
                    message.perPage = reader.int32();
                    break;
                case /* int32 page */ 2:
                    message.page = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPostsListingRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 per_page = 1; */
        if (message.perPage !== 0)
            writer.tag(1, WireType.Varint).int32(message.perPage);
        /* int32 page = 2; */
        if (message.page !== 0)
            writer.tag(2, WireType.Varint).int32(message.page);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pb.GetPostsListingRequest
 */
export const GetPostsListingRequest = new GetPostsListingRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPostsListingResponse$Type extends MessageType<GetPostsListingResponse> {
    constructor() {
        super("pb.GetPostsListingResponse", [
            { no: 1, name: "posts", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PostWithUsername },
            { no: 2, name: "next_page_exists", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetPostsListingResponse>): GetPostsListingResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.posts = [];
        message.nextPageExists = false;
        if (value !== undefined)
            reflectionMergePartial<GetPostsListingResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPostsListingResponse): GetPostsListingResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated pb.PostWithUsername posts */ 1:
                    message.posts.push(PostWithUsername.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool next_page_exists */ 2:
                    message.nextPageExists = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPostsListingResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated pb.PostWithUsername posts = 1; */
        for (let i = 0; i < message.posts.length; i++)
            PostWithUsername.internalBinaryWrite(message.posts[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool next_page_exists = 2; */
        if (message.nextPageExists !== false)
            writer.tag(2, WireType.Varint).bool(message.nextPageExists);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message pb.GetPostsListingResponse
 */
export const GetPostsListingResponse = new GetPostsListingResponse$Type();
